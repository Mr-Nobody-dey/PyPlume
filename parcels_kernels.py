import math


def AgeParticle(particle, fieldset, time):
    """
    Kernel to measure particle ages.
    """
    particle.lifetime += particle.dt


def TestOOB(particle, fieldset, time):
    """
    Kernel to test if a particle has gone into a location without any ocean current data.
    """
    OOB_THRESH = 1e-14
    u, v = fieldset.UV[time, particle.depth, particle.lat, particle.lon]
    if math.fabs(u) < OOB_THRESH and math.fabs(v) < OOB_THRESH:
        particle.oob = 1
    else:
        particle.oob = 0


def DeleteOOB(particle, fieldset, time):
    """Deletes particles that go out of bounds"""
    OOB_THRESH = 1e-14
    u, v = fieldset.UV[time, particle.depth, particle.lat, particle.lon]
    if math.fabs(u) < OOB_THRESH and math.fabs(v) < OOB_THRESH:
        particle.delete()


def DeleteAfterLifetime(particle, fieldset, time):
    LIFETIME = 259200
    if particle.lifetime > LIFETIME:
        particle.delete()


def DeleteParticle(particle, fieldset, time):
    print(f"Particle [{particle.id}] lost "
          f"({particle.time}, {particle.depth}, {particle.lat}, {particle.lon})", file=sys.stderr)
    particle.delete()


def DeleteIntersectTijuana(particle, fieldset, time):
    if particle.dt != 0:
        # what the fuck
        coast_lats = [32.275143, 32.27661 , 32.278957, 32.27925 , 32.280424, 32.281891,
        32.282477, 32.282771, 32.283357, 32.284531, 32.284824, 32.288051,
        32.291571, 32.292158, 32.293625, 32.296558, 32.297732, 32.300079,
        32.301545, 32.301839, 32.302425, 32.307412, 32.309759, 32.310639,
        32.311519, 32.31328 , 32.31416 , 32.317386, 32.31856 , 32.321787,
        32.322667, 32.324427, 32.328827, 32.330587, 32.331468, 32.333521,
        32.335574, 32.336748, 32.338508, 32.339681, 32.340855, 32.341735,
        32.342908, 32.344375, 32.345255, 32.345842, 32.346722, 32.348189,
        32.349069, 32.350242, 32.350829, 32.352882, 32.354349, 32.356109,
        32.356109, 32.356989, 32.357576, 32.357869, 32.358749, 32.360216,
        32.361976, 32.36315 , 32.364323, 32.36755 , 32.368724, 32.369897,
        32.37107 , 32.371657, 32.37283 , 32.374297, 32.374884, 32.378404,
        32.381631, 32.382511, 32.383685, 32.384271, 32.385151, 32.386325,
        32.388085, 32.389258, 32.391605, 32.392779, 32.393952, 32.396005,
        32.397766, 32.398646, 32.403046, 32.403926, 32.406273, 32.407153,
        32.408913, 32.41038 , 32.410967, 32.412727, 32.413313, 32.41742 ,
        32.418007, 32.419474, 32.420647, 32.422701, 32.423287, 32.427981,
        32.428861, 32.432381, 32.435022, 32.436195, 32.437662, 32.438542,
        32.439715, 32.440009, 32.440009, 32.441475, 32.442649, 32.443236,
        32.444996, 32.446462, 32.446756, 32.448223, 32.447929, 32.448809,
        32.450276, 32.451743, 32.453503, 32.454676, 32.455263, 32.456436,
        32.45673 , 32.457317, 32.458783, 32.459663, 32.463477, 32.464944,
        32.465824, 32.466411, 32.467291, 32.468757, 32.468757, 32.473158,
        32.474038, 32.476385, 32.478438, 32.480492, 32.482252, 32.483718,
        32.485185, 32.486945, 32.488412, 32.489292, 32.492226, 32.493106,
        32.495746, 32.496626, 32.503373, 32.50396 , 32.509827, 32.511   ,
        32.529482, 32.529482, 32.533859, 32.534441, 32.53478 , 32.536009,
        32.53693 , 32.537971, 32.53891 , 32.540102, 32.541078, 32.542119,
        32.542852, 32.54365 , 32.545442, 32.548082, 32.549242, 32.549301,
        32.549641, 32.551712, 32.551942, 32.554939, 32.558322, 32.559129,
        32.56198 , 32.56412 , 32.565881, 32.568012, 32.569552, 32.572412,
        32.572641, 32.579311, 32.580759, 32.583152, 32.584532, 32.586851,
        32.587603, 32.588198, 32.595051, 32.595509, 32.596889, 32.597118,
        32.598732, 32.598961, 32.599882, 32.603668, 32.604929, 32.607982,
        32.611841, 32.613211, 32.613321, 32.61367 , 32.61625 , 32.616709,
        32.61901 , 32.619931, 32.62225 , 32.6309  , 32.63156 , 32.63272 ,
        32.634301, 32.635222, 32.639989, 32.639989, 32.640452, 32.641598,
        32.64367 , 32.648029, 32.649331, 32.650972, 32.652218, 32.653002,
        32.65479 , 32.655789, 32.657228, 32.659442, 32.659612, 32.674591,
        32.676539, 32.67868 , 32.679409, 32.679532, 32.679542, 32.68006 ,
        32.68132 , 32.682361, 32.683452, 32.683969, 32.684808, 32.685239,
        32.685872, 32.686101, 32.686101, 32.68633 , 32.686788, 32.686788,
        32.687192, 32.687421, 32.687311, 32.687659, 32.68771 , 32.687829,
        32.687829, 32.688461, 32.688351, 32.688672, 32.688521, 32.68864 ,
        32.68853 , 32.688351, 32.68842 , 32.688012, 32.688021, 32.688131,
        32.688081, 32.688191, 32.688191, 32.687971, 32.687682, 32.687742,
        32.687632, 32.687632, 32.687398, 32.687522, 32.687338, 32.687398,
        32.686422, 32.686238, 32.686179, 32.685771, 32.685019, 32.68523 ,
        32.685161, 32.684652, 32.684272, 32.68385 , 32.6833  , 32.68275 ,
        32.681999, 32.681549, 32.681082, 32.680559, 32.680101, 32.67956 ,
        32.67863 , 32.677859, 32.677222, 32.676512, 32.676058, 32.675609,
        32.675132, 32.674289, 32.67383 , 32.673601, 32.673138, 32.672552,
        32.671209, 32.670622, 32.66987 , 32.66872 , 32.667739, 32.667221,
        32.6669  , 32.666148, 32.666112, 32.665969, 32.66569 , 32.665442,
        32.665309, 32.66541 , 32.665782, 32.666189, 32.666611, 32.667111,
        32.667519, 32.66805 , 32.668591, 32.669201, 32.669792, 32.670388,
        32.670732, 32.671181, 32.671502, 32.671882, 32.672341, 32.672882,
        32.673349, 32.67356 , 32.674032, 32.67449 , 32.674779, 32.674853,
        32.674582, 32.67444 , 32.67455 , 32.67516 , 32.675618, 32.676031,
        32.67653 , 32.677089, 32.677621, 32.678222, 32.678299, 32.678469,
        32.678969, 32.679821, 32.680399, 32.681141, 32.682292, 32.682521,
        32.683089, 32.684281, 32.68545 , 32.686179, 32.687242, 32.688631,
        32.690061, 32.690492, 32.690969, 32.691423, 32.691739, 32.691922,
        32.692779, 32.6931  , 32.69321 , 32.69349 , 32.693939, 32.694562,
        32.694851, 32.695181, 32.695552, 32.695731, 32.696052, 32.696501,
        32.69673 , 32.69707 , 32.697262, 32.69751 , 32.697688, 32.697872,
        32.698069, 32.698321, 32.698711, 32.699118, 32.69998 , 32.700439,
        32.700659, 32.701282, 32.701708, 32.702162, 32.702671, 32.703161,
        32.703643, 32.70389 , 32.704188, 32.706168, 32.706549, 32.706979,
        32.708579, 32.709789, 32.710252, 32.710651, 32.711109, 32.711801,
        32.71264 , 32.714781, 32.715468, 32.715468, 32.715872, 32.717811,
        32.719832, 32.722871, 32.723329, 32.723449, 32.723902, 32.725099,
        32.725708, 32.72591 , 32.726799, 32.727248, 32.727849, 32.72833 ,
        32.728981, 32.729641, 32.730462, 32.730782, 32.731158, 32.731511,
        32.731919, 32.73241 , 32.732653, 32.7329  , 32.733138, 32.733262,
        32.733459, 32.733601, 32.733798, 32.733968]
        coast_lons = [-117.030214, -117.031681, -117.032854, -117.033441, -117.034908,
        -117.036081, -117.036961, -117.037841, -117.038428, -117.038721,
        -117.039015, -117.040775, -117.040775, -117.041655, -117.040775,
        -117.041068, -117.041948, -117.042828, -117.045469, -117.046349,
        -117.046642, -117.046642, -117.048109, -117.048402, -117.048989,
        -117.049575, -117.049869, -117.050162, -117.051336, -117.051629,
        -117.052509, -117.052802, -117.054562, -117.055736, -117.056029,
        -117.057496, -117.058376, -117.05955 , -117.06043 , -117.06131 ,
        -117.061896, -117.062483, -117.062776, -117.063656, -117.06483 ,
        -117.065123, -117.066003, -117.066003, -117.066883, -117.066883,
        -117.06747 , -117.067763, -117.068937, -117.069817, -117.069817,
        -117.070697, -117.07099 , -117.070697, -117.071577, -117.071577,
        -117.07275 , -117.07275 , -117.073631, -117.074217, -117.073924,
        -117.074804, -117.075391, -117.075684, -117.075977, -117.076857,
        -117.077737, -117.079204, -117.082431, -117.082431, -117.083311,
        -117.083311, -117.084191, -117.084485, -117.085951, -117.085951,
        -117.088592, -117.088592, -117.090058, -117.090938, -117.090938,
        -117.092112, -117.091819, -117.092405, -117.092699, -117.093579,
        -117.093872, -117.094459, -117.095045, -117.095632, -117.095925,
        -117.095925, -117.097099, -117.097392, -117.098566, -117.098566,
        -117.099152, -117.099152, -117.100032, -117.100326, -117.100912,
        -117.101793, -117.102086, -117.102379, -117.102379, -117.102966,
        -117.103553, -117.105019, -117.105313, -117.1059  , -117.1059  ,
        -117.107366, -117.108246, -117.109713, -117.110887, -117.111767,
        -117.112353, -117.112353, -117.113233, -117.113233, -117.113527,
        -117.114993, -117.114993, -117.114993, -117.115874, -117.115874,
        -117.118514, -117.118514, -117.1191  , -117.1191  , -117.119981,
        -117.120567, -117.120861, -117.120861, -117.121741, -117.121741,
        -117.122621, -117.122621, -117.123207, -117.124381, -117.124381,
        -117.124968, -117.124968, -117.124381, -117.124674, -117.124968,
        -117.124381, -117.123501, -117.123501, -117.124381, -117.124381,
        -117.125261, -117.124968, -117.124968, -117.124899, -117.1245  ,
        -117.124298, -117.124101, -117.124101, -117.124101, -117.124101,
        -117.124101, -117.124202, -117.124298, -117.124399, -117.1245  ,
        -117.1251  , -117.125802, -117.126301, -117.126498, -117.126498,
        -117.1272  , -117.127301, -117.128098, -117.129602, -117.130601,
        -117.131701, -117.132301, -117.132599, -117.132902, -117.132998,
        -117.132902, -117.132801, -117.132801, -117.132801, -117.132599,
        -117.1327  , -117.1327  , -117.1327  , -117.132301, -117.132301,
        -117.132402, -117.132402, -117.132599, -117.132599, -117.1327  ,
        -117.1327  , -117.133301, -117.133301, -117.134002, -117.134699,
        -117.135102, -117.1349  , -117.135102, -117.1359  , -117.1359  ,
        -117.136399, -117.136803, -117.137499, -117.1409  , -117.1414  ,
        -117.142   , -117.1425  , -117.143201, -117.146002, -117.1463  ,
        -117.146199, -117.146602, -117.147703, -117.150301, -117.1512  ,
        -117.1523  , -117.152699, -117.153501, -117.154202, -117.155101,
        -117.155802, -117.157502, -117.157699, -117.172202, -117.174302,
        -117.177299, -117.178001, -117.178399, -117.179802, -117.179802,
        -117.181502, -117.1834  , -117.184899, -117.185898, -117.186998,
        -117.188401, -117.189501, -117.190101, -117.190298, -117.190601,
        -117.191701, -117.191999, -117.192499, -117.192998, -117.193301,
        -117.193599, -117.194199, -117.1943  , -117.1949  , -117.196798,
        -117.197302, -117.198201, -117.198599, -117.1992  , -117.201299,
        -117.201602, -117.202101, -117.204801, -117.205402, -117.2057  ,
        -117.206199, -117.206502, -117.2096  , -117.210402, -117.210998,
        -117.212401, -117.212598, -117.213102, -117.213602, -117.213799,
        -117.214299, -117.2145  , -117.217099, -117.2178  , -117.218401,
        -117.219299, -117.221202, -117.221399, -117.235099, -117.235503,
        -117.235901, -117.236598, -117.237102, -117.237602, -117.238102,
        -117.238202, -117.238202, -117.238001, -117.237602, -117.237199,
        -117.237001, -117.2368  , -117.2368  , -117.236901, -117.2368  ,
        -117.236598, -117.236502, -117.236699, -117.236699, -117.236502,
        -117.236401, -117.236401, -117.237501, -117.2374  , -117.237199,
        -117.237199, -117.2379  , -117.238299, -117.238702, -117.239399,
        -117.239701, -117.2401  , -117.2406  , -117.2412  , -117.241901,
        -117.2423  , -117.243001, -117.243602, -117.244102, -117.244299,
        -117.244601, -117.244798, -117.244702, -117.244601, -117.244899,
        -117.245399, -117.2455  , -117.245202, -117.245   , -117.245101,
        -117.245302, -117.2456  , -117.2455  , -117.2455  , -117.245302,
        -117.245302, -117.2455  , -117.245999, -117.246403, -117.2467  ,
        -117.246902, -117.246998, -117.247099, -117.247099, -117.246998,
        -117.246902, -117.246902, -117.246998, -117.2472  , -117.247599,
        -117.2477  , -117.2483  , -117.248502, -117.2488  , -117.249001,
        -117.2488  , -117.248598, -117.249602, -117.249698, -117.2499  ,
        -117.250202, -117.250202, -117.250399, -117.2505  , -117.250899,
        -117.251   , -117.251202, -117.2516  , -117.2521  , -117.252403,
        -117.252801, -117.252902, -117.252902, -117.252902, -117.253099,
        -117.2532  , -117.253498, -117.2537  , -117.254002, -117.254002,
        -117.253901, -117.253901, -117.253901, -117.254199, -117.254401,
        -117.254502, -117.254502, -117.254401, -117.254401, -117.254598,
        -117.255001, -117.255602, -117.255602, -117.255299, -117.255102,
        -117.255102, -117.255102, -117.255199, -117.255501, -117.255501,
        -117.2554  , -117.2554  , -117.2554  , -117.255199, -117.255299,
        -117.255299, -117.255501, -117.2559  , -117.2559  , -117.256202,
        -117.256001, -117.256299, -117.256299, -117.256102, -117.2559  ,
        -117.256202, -117.257101, -117.257   , -117.257202, -117.2575  ,
        -117.257399, -117.257999, -117.257701, -117.257202, -117.2559  ,
        -117.255698, -117.255799, -117.2559  , -117.256102, -117.256202,
        -117.257   , -117.257   , -117.256798, -117.256702, -117.256702,
        -117.256601, -117.256601, -117.256601, -117.256798, -117.256899,
        -117.256899, -117.256798, -117.2565  , -117.256202]
        u, v = fieldset.UV[time, particle.depth, particle.lat, particle.lon]
        pred_lat = particle.lat + v * particle.dt
        pred_lon = particle.lon + u * particle.dt
        i = 0
        while i < len(coast_lats) - 1:
            coast_x_diff = coast_lons[i] - coast_lons[i + 1]
            part_x_diff = particle.lon - pred_lon
            if coast_x_diff == 0:
                if part_x_diff == 0:
                    if particle.lon == coast_lons[i]:
                        particle.delete()
                        break
                    break
                particle_slope = (pred_lat - particle.lat) / (part_x_diff)
                particle_y_int = pred_lat - particle_slope * pred_lon
                int_y = particle_slope * coast_lons[i] + particle_y_int
                if ((coast_lats[i] < int_y and coast_lats[i + 1] > int_y) or (coast_lats[i] > int_y and coast_lats[i + 1] < int_y)) and ((particle.lon > coast_lons[i] and pred_lon < coast_lons[i]) or (particle.lon < coast_lons[i] and pred_lon > coast_lons[i])):
                    particle.delete()
                break
            if part_x_diff == 0:
                coast_slope = (coast_lats[i] - coast_lats[i + i]) / (coast_x_diff)
                coast_y_int = coast_lats[i] - coast_slope * coast_lons[i]
                int_y = coast_y_int * particle.lon + coast_y_int
                if ((particle.lat < int_y and pred_lat > int_y) or (particle.lat > int_y and pred_lat < int_y)) and ((particle.lon > coast_lons[i] and particle.lon < coast_lons[i + 1]) or (particle.lon < coast_lons[i] and particle.lon > coast_lons[i + 1])):
                    particle.delete()
                break
            particle_slope = (particle.lat - pred_lat) / (part_x_diff)
            particle_y_int = pred_lat - particle_slope * pred_lon
            coast_slope = (coast_lats[i] - coast_lats[i + i]) / (coast_x_diff)
            coast_y_int = coast_lats[i] - coast_slope * coast_lons[i]
            slope_d = particle_slope - coast_slope
            int_d = coast_y_int - particle_y_int
            int_x = int_d / slope_d
            int_y = particle_slope * (int_x - particle.lon) + particle.lat
            if (((int_x > coast_lons[i] and int_x < coast_lons[i + 1]) or (int_x < coast_lons[i] and int_x > coast_lons[i + 1])) and ((int_y > coast_lats[i] and int_y < coast_lats[i + 1]) or (int_y < coast_lats[i] and int_y > coast_lats[i + 1]))) and \
                (((int_x > particle.lon and int_x < pred_lon) or (int_x < particle.lon and int_x > pred_lon)) and ((int_y > particle.lat and int_y < pred_lat) or (int_y < particle.lat and int_y > pred_lat))):
                particle.delete()
                break
            i = i + 1
